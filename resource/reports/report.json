{
  "stats": {
    "suites": 3,
    "tests": 11,
    "passes": 9,
    "pending": 0,
    "failures": 2,
    "start": "2024-05-18T09:26:42.703Z",
    "end": "2024-05-18T09:29:23.992Z",
    "duration": 161289,
    "testsRegistered": 11,
    "passPercent": 81.81818181818183,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "99d5ceb1-7c08-4554-a7b3-7140b35a53c7",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ae07feb0-1d11-4d71-a985-adc412fcbd9f",
          "title": "User favorite project",
          "fullFile": "E:\\KULIAH\\TA\\propertio_seleniumTesting\\test\\user\\user_favorite_project.js",
          "file": "\\test\\user\\user_favorite_project.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"User favorite project\"",
              "fullTitle": "User favorite project \"before all\" hook in \"User favorite project\"",
              "timedOut": false,
              "duration": 6001,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();\nawait driver.get(url);\nawait driver.manage().setTimeouts( { implicit: 5000 } );\nawait driver.manage().window().maximize();",
              "err": {},
              "uuid": "aed028c5-7aac-4851-842c-94aca02e54ea",
              "parentUUID": "ae07feb0-1d11-4d71-a985-adc412fcbd9f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"User favorite project\"",
              "fullTitle": "User favorite project \"after all\" hook in \"User favorite project\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// await driver.quit();",
              "err": {},
              "uuid": "227f77fc-135b-41c2-b504-91b352b673ee",
              "parentUUID": "ae07feb0-1d11-4d71-a985-adc412fcbd9f",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"User favorite project\"",
              "fullTitle": "User favorite project \"after each\" hook in \"User favorite project\"",
              "timedOut": false,
              "duration": 2027,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(url); \nconsole.log(\"Test '\" + this.currentTest.title + \"' done âœ…\");",
              "err": {},
              "uuid": "5e9033a7-c143-4f18-9a36-8de319cc33b1",
              "parentUUID": "ae07feb0-1d11-4d71-a985-adc412fcbd9f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "user should can favorite project",
              "fullTitle": "User favorite project user should can favorite project",
              "timedOut": false,
              "duration": 24776,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//login first\n        await driver.findElement(By.xpath(getLoginElement.loginRegisterButtonXpath)).click();\n        let loginPageTitle = await driver.getTitle();\n        loginPageTitle.should.equal(\"Propertio - Login\");\n        await driver.findElement(By.xpath(getLoginElement.emailFieldXpath)).sendKeys(\"user@mail.com\");\n        await driver.findElement(By.xpath(getLoginElement.passwordFieldXpath)).sendKeys(\"11111111\");\n        await driver.findElement(By.xpath(getLoginElement.loginButtonXpath)).click();\n        const loginModal = await driver.findElement(By.xpath(getLoginElement.loginModalXpath));\n        await driver.wait(until.elementIsVisible(loginModal), 5000);\n        const loginModalText = await driver.findElement(By.xpath(getLoginElement.loginModalTextXpath)).getText();\n        loginModalText.should.equal(\"Login ke Akun Anda berhasil!\");\n        await delay(3000);\n        const homeUrl = await driver.getCurrentUrl();\n        homeUrl.should.equal(\"http://127.0.0.1:8000/\");\n \n        const propertyButton = await driver.findElement(By.xpath(getMenuElement.propertyButtonXpath));\n        await driver.wait(until.elementIsVisible(propertyButton), 5000);\n        await propertyButton.click();\n        const propertyUrl = await driver.getCurrentUrl();\n        propertyUrl.should.equal(\"http://127.0.0.1:8000/home/property/index?type=sell\");\n        await delay(3000);\n        await scrollDown(driver, 800);\n        const favoriteProjectButton = await driver.findElement(By.xpath(getMenuElement.favoriteProjectButtonXpath));\n        await driver.wait(until.elementIsVisible(favoriteProjectButton), 5000);\n        await favoriteProjectButton.click();\n        const favoriteModal = await driver.findElement(By.xpath(getPopUpElement.favoriteModalXpath));\n        await driver.wait(until.elementIsVisible(favoriteModal), 5000);\n        \n        const favoriteModalText = await driver.findElement(By.xpath(getPopUpElement.favoriteModalTextXpath)).getText();\n        favoriteModalText.should.equal(\"Tersimpan di Favorit!\");\n        await driver.findElement(By.xpath(getPopUpElement.favoriteModalConfirmXpath)).click();\n        await delay(3000);",
              "err": {},
              "uuid": "b7c8f3ed-70dd-4d57-9207-bdbad0ce9b12",
              "parentUUID": "ae07feb0-1d11-4d71-a985-adc412fcbd9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "user should can unfavorite project",
              "fullTitle": "User favorite project user should can unfavorite project",
              "timedOut": false,
              "duration": 6697,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userProfile = await driver.findElement(By.xpath(getMenuElement.userProfileDropdownXpath));\n        await driver.wait(until.elementIsVisible(userProfile), 5000);\n        await userProfile.click();\n        const userFavoriteButton = await driver.findElement(By.xpath(getMenuElement.userFavoriteButtonXpath))\n        await driver.wait(until.elementIsVisible(userFavoriteButton), 5000);\n        await userFavoriteButton.click();\n        const favoriteUrl = await driver.getCurrentUrl();\n        favoriteUrl.should.equal(\"http://127.0.0.1:8000/favorite\");\n        await delay(3000);\n        await scrollDown(driver, 500);\n        const projectContainer = await driver.findElement(By.xpath(getMenuElement.userProjectContainerXpath));\n        await driver.wait(until.elementIsVisible(projectContainer), 5000);\n        await driver.findElement(By.xpath(getMenuElement.unfavoriteProjectButtonXpath)).click();\n        const unfavoriteModal = await driver.findElement(By.xpath(getPopUpElement.favoriteModalXpath));\n        await driver.wait(until.elementIsVisible(unfavoriteModal), 5000);\n        await driver.findElement(By.xpath(getPopUpElement.favoriteModalConfirmXpath)).click();\n        await delay(2000);\n        \n        const confirmationModal = await driver.findElement(By.xpath(getPopUpElement.favoriteModalXpath));   \n        await driver.wait(until.elementIsVisible(confirmationModal), 5000);\n        const confirmationModalText = await driver.findElement(By.xpath(getPopUpElement.favoriteModalTextXpath)).getText();\n        confirmationModalText.should.equal(\"Berhasil menghapus Proyek Favorit!\");",
              "err": {},
              "uuid": "ca565794-a26f-4b63-9949-4aed4b66411b",
              "parentUUID": "ae07feb0-1d11-4d71-a985-adc412fcbd9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "user should can not project property if not logged in",
              "fullTitle": "User favorite project user should can not project property if not logged in",
              "timedOut": false,
              "duration": 12858,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//logout first\n        await driver.findElement(By.xpath(getMenuElement.userProfileDropdownXpath)).click();\n        await delay(2000);\n        const logoutButton = await driver.findElement(By.xpath(getMenuElement.logoutButtonXpath));\n        await driver.wait(until.elementIsVisible(logoutButton), 5000);\n        await logoutButton.click();\n        await delay(2000);\n        \n        const propertyButton = await driver.findElement(By.xpath(getMenuElement.propertyButtonXpath));\n        await driver.wait(until.elementIsVisible(propertyButton), 5000);\n        await propertyButton.click();\n        const propertyUrl = await driver.getCurrentUrl();\n        propertyUrl.should.equal(\"http://127.0.0.1:8000/home/property/index?type=sell\");\n        await delay(3000);\n        await scrollDown(driver, 800);\n        const favoriteProjectButton = await driver.findElement(By.xpath(getMenuElement.unloginFavoriteProjecctButtonXpath));\n        await driver.wait(until.elementIsVisible(favoriteProjectButton), 5000);\n        await favoriteProjectButton.click();\n        await delay(2000);\n        const loginUrl = await driver.getCurrentUrl();\n        loginUrl.should.equal(\"http://127.0.0.1:8000/login\");",
              "err": {},
              "uuid": "5dd9b2a2-144e-440d-a487-0dc62472dbfe",
              "parentUUID": "ae07feb0-1d11-4d71-a985-adc412fcbd9f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7c8f3ed-70dd-4d57-9207-bdbad0ce9b12",
            "ca565794-a26f-4b63-9949-4aed4b66411b",
            "5dd9b2a2-144e-440d-a487-0dc62472dbfe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 44331,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "780f9e20-6e81-440e-b7fa-610ab07a823d",
          "title": "User favorite property",
          "fullFile": "E:\\KULIAH\\TA\\propertio_seleniumTesting\\test\\user\\user_favorite_property.js",
          "file": "\\test\\user\\user_favorite_property.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"User favorite property\"",
              "fullTitle": "User favorite property \"before all\" hook in \"User favorite property\"",
              "timedOut": false,
              "duration": 4502,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();\nawait driver.get(url);\nawait driver.manage().setTimeouts( { implicit: 5000 } );\nawait driver.manage().window().maximize();",
              "err": {},
              "uuid": "ca4c41f9-247c-45ab-8b23-14d05efde808",
              "parentUUID": "780f9e20-6e81-440e-b7fa-610ab07a823d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"User favorite property\"",
              "fullTitle": "User favorite property \"after all\" hook in \"User favorite property\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// await driver.quit();",
              "err": {},
              "uuid": "4482f207-259a-405a-a952-3efa94a0d82c",
              "parentUUID": "780f9e20-6e81-440e-b7fa-610ab07a823d",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"User favorite property\"",
              "fullTitle": "User favorite property \"after each\" hook in \"User favorite property\"",
              "timedOut": false,
              "duration": 2065,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(url); \nconsole.log(\"Test '\" + this.currentTest.title + \"' done âœ…\");",
              "err": {},
              "uuid": "1eefb884-f84c-47aa-bf8d-4a1f941724c2",
              "parentUUID": "780f9e20-6e81-440e-b7fa-610ab07a823d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "user should can favorite property",
              "fullTitle": "User favorite property user should can favorite property",
              "timedOut": false,
              "duration": 39991,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//login first\n        await driver.findElement(By.xpath(getLoginElement.loginRegisterButtonXpath)).click();\n        let loginPageTitle = await driver.getTitle();\n        loginPageTitle.should.equal(\"Propertio - Login\");\n        await driver.findElement(By.xpath(getLoginElement.emailFieldXpath)).sendKeys(\"user@mail.com\");\n        await driver.findElement(By.xpath(getLoginElement.passwordFieldXpath)).sendKeys(\"11111111\");\n        await driver.findElement(By.xpath(getLoginElement.loginButtonXpath)).click();\n        const loginModal = await driver.findElement(By.xpath(getLoginElement.loginModalXpath));\n        await driver.wait(until.elementIsVisible(loginModal), 5000);\n        const loginModalText = await driver.findElement(By.xpath(getLoginElement.loginModalTextXpath)).getText();\n        loginModalText.should.equal(\"Login ke Akun Anda berhasil!\");\n        await delay(3000);\n        const homeUrl = await driver.getCurrentUrl();\n        homeUrl.should.equal(\"http://127.0.0.1:8000/\");\n        //favorit property\n        const propertyButton = await driver.findElement(By.xpath(getMenuElement.propertyButtonXpath));\n        await driver.wait(until.elementIsVisible(propertyButton), 5000);\n        await propertyButton.click();\n        const propertyUrl = await driver.getCurrentUrl();\n        propertyUrl.should.equal(\"http://127.0.0.1:8000/home/property/index?type=sell\");\n        await delay(3000);\n        await scrollDown(driver, 2000);\n        const favoritePropertyButton = await driver.findElement(By.xpath(getMenuElement.favoritePropertyButtonXpath));\n        await driver.wait(until.elementIsVisible(favoritePropertyButton), 5000);\n        await favoritePropertyButton.click();\n        const favoriteModal = await driver.findElement(By.xpath(getPopUpElement.favoriteModalXpath));\n        await driver.wait(until.elementIsVisible(favoriteModal), 5000);\n        \n        const favoriteModalText = await driver.findElement(By.xpath(getPopUpElement.favoriteModalTextXpath)).getText();\n        favoriteModalText.should.equal(\"Tersimpan di Favorit!\");\n        await driver.findElement(By.xpath(getPopUpElement.favoriteModalConfirmXpath)).click();",
              "err": {},
              "uuid": "8fe271e1-6beb-4d40-a31d-be9caa3b4597",
              "parentUUID": "780f9e20-6e81-440e-b7fa-610ab07a823d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "user should can unfavorite property",
              "fullTitle": "User favorite property user should can unfavorite property",
              "timedOut": false,
              "duration": 7048,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userProfile = await driver.findElement(By.xpath(getMenuElement.userProfileDropdownXpath));\nawait driver.wait(until.elementIsVisible(userProfile), 5000);\nawait userProfile.click();\nconst userFavoriteButton = await driver.findElement(By.xpath(getMenuElement.userFavoriteButtonXpath))\nawait driver.wait(until.elementIsVisible(userFavoriteButton), 5000);\nawait userFavoriteButton.click();\nconst favoriteUrl = await driver.getCurrentUrl();\nfavoriteUrl.should.equal(\"http://127.0.0.1:8000/favorite\");\nawait delay(3000);\nconst propertyTab = await driver.findElement(By.xpath(getMenuElement.favoriteTabXpath));\nawait driver.wait(until.elementIsVisible(propertyTab), 5000);\nawait propertyTab.click();\nawait scrollDown(driver, 600);\nconst projectContainer = await driver.findElement(By.xpath(getMenuElement.propertyContainerXpath));\nawait driver.wait(until.elementIsVisible(projectContainer), 5000);\nawait driver.findElement(By.xpath(getMenuElement.unfavoritePropertyButtonXpath)).click();\nconst unfavoriteModal = await driver.findElement(By.xpath(getPopUpElement.favoriteModalXpath));\nawait driver.wait(until.elementIsVisible(unfavoriteModal), 5000);\nawait driver.findElement(By.xpath(getPopUpElement.favoriteModalConfirmXpath)).click();\nawait delay(2000);\n\nconst confirmationModal = await driver.findElement(By.xpath(getPopUpElement.favoriteModalXpath));   \nawait driver.wait(until.elementIsVisible(confirmationModal), 5000);\nconst confirmationModalText = await driver.findElement(By.xpath(getPopUpElement.favoriteModalTextXpath)).getText();\nconfirmationModalText.should.equal(\"Berhasil menghapus Properti Favorit!\");",
              "err": {},
              "uuid": "cc63c357-fd0d-4521-864e-77072085e769",
              "parentUUID": "780f9e20-6e81-440e-b7fa-610ab07a823d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "user should can not favorite property if not logged in",
              "fullTitle": "User favorite property user should can not favorite property if not logged in",
              "timedOut": false,
              "duration": 10465,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//logout first\n        await driver.findElement(By.xpath(getMenuElement.userProfileDropdownXpath)).click();\n        const logoutButton = await driver.findElement(By.xpath(getMenuElement.logoutButtonXpath));\n        await driver.wait(until.elementIsVisible(logoutButton), 5000);\n        await driver.findElement(By.xpath(getMenuElement.logoutButtonXpath)).click();\n        await delay(5000);\n        \n        const propertyButton = await driver.findElement(By.xpath(getMenuElement.propertyButtonXpath));\n        await driver.wait(until.elementIsVisible(propertyButton), 5000);\n        await propertyButton.click();\n        const propertyUrl = await driver.getCurrentUrl();\n        propertyUrl.should.equal(\"http://127.0.0.1:8000/home/property/index?type=sell\");\n        await delay(3000);\n        await scrollDown(driver, 2000);\n        const favoritePropertyButton = await driver.findElement(By.xpath(getMenuElement.unloginFavoriteButtonXpath));\n        await driver.wait(until.elementIsVisible(favoritePropertyButton), 5000);\n        await favoritePropertyButton.click();\n        const loginUrl = await driver.getCurrentUrl();\n        loginUrl.should.equal(\"http://127.0.0.1:8000/login\");",
              "err": {},
              "uuid": "8d1ce025-5066-4473-bade-25b3edda9be7",
              "parentUUID": "780f9e20-6e81-440e-b7fa-610ab07a823d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8fe271e1-6beb-4d40-a31d-be9caa3b4597",
            "cc63c357-fd0d-4521-864e-77072085e769",
            "8d1ce025-5066-4473-bade-25b3edda9be7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 57504,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "c164ab09-7d02-4354-a1d7-ec1f9e30a093",
          "title": "User login",
          "fullFile": "E:\\KULIAH\\TA\\propertio_seleniumTesting\\test\\user\\user_login.js",
          "file": "\\test\\user\\user_login.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"User login\"",
              "fullTitle": "User login \"before all\" hook in \"User login\"",
              "timedOut": false,
              "duration": 4724,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();\nawait driver.get(url);\nawait driver.manage().setTimeouts( { implicit: 5000 } );\nawait driver.manage().window().maximize();",
              "err": {},
              "uuid": "dfd97edf-b5df-4d9a-8d08-cd7a42cbf510",
              "parentUUID": "c164ab09-7d02-4354-a1d7-ec1f9e30a093",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"User login\"",
              "fullTitle": "User login \"after all\" hook in \"User login\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// await driver.quit();",
              "err": {},
              "uuid": "2ace2b84-4804-446e-b019-b1a679956cd4",
              "parentUUID": "c164ab09-7d02-4354-a1d7-ec1f9e30a093",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"User login\"",
              "fullTitle": "User login \"after each\" hook in \"User login\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Test '\" + this.currentTest.title + \"' done âœ…\");",
              "err": {},
              "uuid": "b1586f35-e153-42b5-9866-d4e15f80719f",
              "parentUUID": "c164ab09-7d02-4354-a1d7-ec1f9e30a093",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "User should can login with valid information",
              "fullTitle": "User login User should can login with valid information",
              "timedOut": false,
              "duration": 21732,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let homeTitle = await driver.getTitle();\nhomeTitle.should.equal(\"Propertio - Home\");\nawait driver.findElement(By.xpath(getLoginElement.loginRegisterButtonXpath)).click();\nlet loginPageTitle = await driver.getTitle();\nloginPageTitle.should.equal(\"Propertio - Login\");\nlet loginUrl = await driver.getCurrentUrl();\nloginUrl.should.equal(\"http://127.0.0.1:8000/login\");\n//fill form\nawait driver.findElement(By.xpath(getLoginElement.emailFieldXpath)).sendKeys(\"user@mail.com\");\nawait driver.findElement(By.xpath(getLoginElement.passwordFieldXpath)).sendKeys(\"11111111\");\nawait driver.findElement(By.xpath(getLoginElement.loginButtonXpath)).click();\nconst loginModal = await driver.findElement(By.xpath(getLoginElement.loginModalXpath));\nawait driver.wait(until.elementIsVisible(loginModal), 5000);\nconst loginModalText = await driver.findElement(By.xpath(getLoginElement.loginModalTextXpath)).getText();\nloginModalText.should.equal(\"Login ke Akun Anda berhasil!\");\nawait delay(3000);\nconst dashboardUrl = await driver.getCurrentUrl();\ndashboardUrl.should.equal(\"http://127.0.0.1:8000/\");\n//check profile photo\nconst userProfileName = await driver.findElement(By.xpath(getMenuElement.userProfileNameXpath));\nawait driver.wait(until.elementIsVisible(userProfileName), 5000);\nconst userProfileText = await driver.findElement(By.xpath(getMenuElement.userProfileNameXpath)).getText();\nuserProfileText.should.equal(\"userProperti\");",
              "err": {},
              "uuid": "b196ba43-7216-437c-aaf0-507c799e0289",
              "parentUUID": "c164ab09-7d02-4354-a1d7-ec1f9e30a093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User should can logout",
              "fullTitle": "User login User should can logout",
              "timedOut": false,
              "duration": 7545,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userProfile = await driver.findElement(By.xpath(getMenuElement.userProfileDropdownXpath));\nawait driver.wait(until.elementIsVisible(userProfile), 5000);\nawait userProfile.click();\nawait delay(2000);\nconst logoutButton = await driver.findElement(By.xpath(getMenuElement.logoutButtonXpath));\nawait driver.wait(until.elementIsVisible(logoutButton), 5000);\nawait logoutButton.click();\nawait delay(2000);\nconst homeUrl = await driver.getCurrentUrl();\nhomeUrl.should.equal(\"http://127.0.0.1:8000/\");",
              "err": {},
              "uuid": "f329ca6d-4672-4bf0-9eb1-e955d0d3f0f3",
              "parentUUID": "c164ab09-7d02-4354-a1d7-ec1f9e30a093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User should cant login with invalid email",
              "fullTitle": "User login User should cant login with invalid email",
              "timedOut": false,
              "duration": 1332,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://127.0.0.1:8000/login\");\n//fill form\nawait driver.findElement(By.xpath(getLoginElement.emailFieldXpath)).sendKeys(\"userr@mail.com\");\nawait driver.findElement(By.xpath(getLoginElement.passwordFieldXpath)).sendKeys(\"11111111\");\nawait driver.findElement(By.xpath(getLoginElement.loginButtonXpath)).click();\nconst loginModal = await driver.findElement(By.xpath(getLoginElement.loginModalXpath));\nawait driver.wait(until.elementIsVisible(loginModal), 5000);\nconst loginModalText = await driver.findElement(By.xpath(getLoginElement.loginModalTextXpath)).getText();\nloginModalText.should.equal(\"Invalid email or password.\");\nlet afterLoginUrl = await driver.getCurrentUrl();\nafterLoginUrl.should.equal(\"http://127.0.0.1:8000/login\");",
              "err": {
                "message": "AssertionError: expected '\"Invalid Credentials\"' to equal 'Invalid email or password.'",
                "estack": "AssertionError: expected '\"Invalid Credentials\"' to equal 'Invalid email or password.'\n    at Context.<anonymous> (test\\user\\user_login.js:97:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- \"Invalid Credentials\"\n+ Invalid email or password.\n"
              },
              "uuid": "23dbb920-3910-420f-8829-ef7a10e2acab",
              "parentUUID": "c164ab09-7d02-4354-a1d7-ec1f9e30a093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User should cant login with invalid password",
              "fullTitle": "User login User should cant login with invalid password",
              "timedOut": false,
              "duration": 1373,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://127.0.0.1:8000/login\");\n//fill form\nawait driver.findElement(By.xpath(getLoginElement.emailFieldXpath)).sendKeys(\"user@mail.com\");\nawait driver.findElement(By.xpath(getLoginElement.passwordFieldXpath)).sendKeys(\"12345678\");\nawait driver.findElement(By.xpath(getLoginElement.loginButtonXpath)).click();\nconst loginModal = await driver.findElement(By.xpath(getLoginElement.loginModalXpath));\nawait driver.wait(until.elementIsVisible(loginModal), 5000);\nconst loginModalText = await driver.findElement(By.xpath(getLoginElement.loginModalTextXpath)).getText();\nloginModalText.should.equal(\"Invalid email or password.\");\nlet afterLoginUrl = await driver.getCurrentUrl();\nafterLoginUrl.should.equal(\"http://127.0.0.1:8000/login\");",
              "err": {
                "message": "AssertionError: expected '\"Invalid Credentials\"' to equal 'Invalid email or password.'",
                "estack": "AssertionError: expected '\"Invalid Credentials\"' to equal 'Invalid email or password.'\n    at Context.<anonymous> (test\\user\\user_login.js:114:31)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- \"Invalid Credentials\"\n+ Invalid email or password.\n"
              },
              "uuid": "fb580d7b-e8b2-4ff9-babb-15cb7efc7720",
              "parentUUID": "c164ab09-7d02-4354-a1d7-ec1f9e30a093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User should cant login with empty field",
              "fullTitle": "User login User should cant login with empty field",
              "timedOut": false,
              "duration": 580,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://127.0.0.1:8000/login\");\nawait driver.findElement(By.xpath(getLoginElement.loginButtonXpath)).click();\nlet afterLoginUrl = await driver.getCurrentUrl();\nafterLoginUrl.should.equal(\"http://127.0.0.1:8000/login\");",
              "err": {},
              "uuid": "b97fafbb-bb4f-4499-948a-652f8f0796b7",
              "parentUUID": "c164ab09-7d02-4354-a1d7-ec1f9e30a093",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b196ba43-7216-437c-aaf0-507c799e0289",
            "f329ca6d-4672-4bf0-9eb1-e955d0d3f0f3",
            "b97fafbb-bb4f-4499-948a-652f8f0796b7"
          ],
          "failures": [
            "23dbb920-3910-420f-8829-ef7a10e2acab",
            "fb580d7b-e8b2-4ff9-babb-15cb7efc7720"
          ],
          "pending": [],
          "skipped": [],
          "duration": 32562,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "resource/reports",
        "reportFilename": "report"
      },
      "version": "6.2.0"
    }
  }
}